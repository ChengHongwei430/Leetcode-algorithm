/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* reverseList(ListNode* head) {

        if(!head) return NULL;
        ListNode* pnext=head->next;
        ListNode* ppre=NULL;
        ListNode* p=head;
        while(p){
            p->next=ppre;
            ppre=p;//前一个指向最后一个节点
            p=pnext;//此时p已经到了空指针处
            if(p) pnext=p->next;//不能再看下一个了
        }       
        return ppre;
    }
};