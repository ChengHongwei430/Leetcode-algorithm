/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* removeNthFromEnd(ListNode* head, int n) {
        if(n<=0) return head;
        ListNode *dhead = new ListNode(0,head);
        ListNode *fast =dhead,*slow=dhead;
        for(int i=0;i<n&&fast;++i) fast=fast->next;
        if(!fast) return head;
        while(fast->next){
            fast=fast->next;
            slow=slow->next;
        }
        slow->next=slow->next->next;
        ListNode *result = dhead->next;
        //释放dhead之前，使用result保存
        delete dhead;     
        return result;
        //不能返回head,head在迭代中，很可能已经迷失
        //返回就应该写dhead->next
    }
};
