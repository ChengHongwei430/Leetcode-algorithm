class Solution {
public:
    int monotoneIncreasingDigits(int n) {
        
        //如果从前往后遍历，就要考虑存在22221的情况，必须执行多次
        //所以从后往前
        if(n<10) return n;
        int temp=n;

        vector<int> vn;
        while(temp){
            vn.push_back(temp%10);
            temp=temp/10;
        }
        reverse(vn.begin(),vn.end());
        
        
        int flag=vn.size();//一个不可能的索引
        for(int i=vn.size()-2;i>=0;--i){
            if(vn[i]>vn[i+1]){
                flag=i;
                vn[flag]--;
            }
        }

        for(int i=flag+1;i<vn.size();++i){
            vn[i]=9;
        }

        int result=0;
        for(int i=0;i<vn.size();++i){
            result=result*10+vn[i];
        }

        return result;


    }
};