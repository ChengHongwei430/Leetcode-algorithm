class Solution {
public:
    int candy(vector<int>& ratings) {
        
        //考虑右孩子比左孩子大的情况，需要从左到右，以便在考虑右边时能兼顾左边已经生成的信息
        //考虑左孩子比右孩子大的情况，也是
        //要从右到左，以便前期的修改能影响后期
        int len=ratings.size();
        vector<int> rat(len,1);

        for(int i=1;i<len;++i){
            if(ratings[i]>ratings[i-1]) rat[i]=rat[i-1]+1;
        }

        for(int i=len-2;i>=0;--i){
            if(ratings[i]>ratings[i+1])//取左右影响下所需的较大的糖果数量
                rat[i]=rat[i+1]+1>rat[i]?rat[i+1]+1:rat[i];
        }
//资本家在考虑绩效的情况下发工资，把一个左右两个方向的问题分开考虑，然后在第二个方向中保留两个方向中较优的方案

        int counts=0;
        for(int i=0;i<len;++i){
            counts+=rat[i];
        }

        return counts;

    }
};