
#include<iostream>
#include<vector>

using namespace std;

vector<pair<int,int>> dir={{1,0},{-1,0},{0,1},{0,-1}};//四个方向

void dfs(vector<vector<int>> &graph,vector<vector<int>> &visited,int i,int j,int flag){
    visited[i][j]=1;//访问标记
    graph[i][j]=flag;
    int dirsize=dir.size();
    for(int k=0;k<dirsize;++k){
        int x=i+dir[k].first;
        int y=j+dir[k].second;
        if(x<0||x>=graph.size()||y<0||y>=graph[0].size()) continue;

        if(graph[x][y]&&!visited[x][y]){
            dfs(graph,visited,x,y,flag);
        }
    }
}

int main(){
    
    int x,y;
    cin>>x>>y;
    
    vector<vector<int>> graph(x,vector<int>(y,0));//表示岛屿地图
    for(int i=0;i<x;++i){
        for(int j=0;j<y;++j){
            cin>>graph[i][j];
        }
    }

    vector<vector<int>> visited(x,vector<int>(y,0));//表示节点的访问情况
    
    //访问边缘相连的岛屿
    for(int i=0;i<x;++i){
        if(graph[i][0]&&!visited[i][0]) dfs(graph,visited,i,0,1);
        if(graph[i][y-1]&&!visited[i][y-1]) dfs(graph,visited,i,y-1,1);
    }
    for(int j=0;j<y;++j){
        if(graph[0][j]&&!visited[0][j]) dfs(graph,visited,0,j,1);
        if(graph[x-1][j]&&!visited[x-1][j]) dfs(graph,visited,x-1,j,1);
    }
    
    for(int i=0;i<x;++i){
        for(int j=0;j<y;++j){
            if(graph[i][j]&&!visited[i][j]) dfs(graph,visited,i,j,0);
        }
    }
    
    for(int i=0;i<x;++i){
        for(int j=0;j<y;++j) 
        {
            cout<<graph[i][j];
            if(j!=y-1)cout<<" ";
        }
        cout<<endl;
    }
    
    
}