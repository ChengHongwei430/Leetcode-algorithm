/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */

//递归实现对称二叉树
bool TreeJudge(TreeNode* left,TreeNode* right){
    if(!left&&!right) return true;
    else if((!left&&right)||(left&&!right)) return false;
    else if(left->val!=right->val) return false;
    else{//判断左右节点相同
        bool a = TreeJudge(left->left,right->right);
        bool b = TreeJudge(left->right,right->left);
        return a&&b;
    }
}

class Solution {
public:
    bool isSymmetric(TreeNode* root) {

        return TreeJudge(root->left,root->right);
    }
};