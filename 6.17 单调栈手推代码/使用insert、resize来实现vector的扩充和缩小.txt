class Solution {
public:
    vector<int> nextGreaterElements(vector<int>& nums) {

        stack<int> st;//操作栈

        vector<int> nums2=nums;
        nums2.insert(nums2.end(),nums.begin(),nums.end());//直接两个数组拼一下就行
        //////////////使用insert/resize来实现vector的扩充和缩小

        vector<int> result(nums2.size(),-1);//存放结果
        for(int i=0;i<nums2.size();++i){          
            if(st.empty()||nums2[i]<=nums2[st.top()]) st.push(i);
            //当栈为空，或者对比元素小于栈顶元素时入栈
            else{
                while(!st.empty()&&nums2[i]>nums2[st.top()]){
                //这里要注意入栈的是下标，不是元素
                    result[st.top()]=nums2[i];
                    st.pop();//已经存好的元素出栈
                }
                st.push(i);
            }
        }

        result.resize(nums2.size()/2);

        return result;

    }
};