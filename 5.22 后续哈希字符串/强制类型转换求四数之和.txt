class Solution {
public:
    vector<vector<int>> fourSum(vector<int>& nums, int target) {

        vector<vector<int>> vv;
        int left,right;
        sort(nums.begin(), nums.end());//排序之后就只能在右边找合适的数

        for(int i=0;i<nums.size();++i){
            if(nums[i]>=0&&nums[i]>target) break;       
            if(i>0&&nums[i]==nums[i-1]) continue;
            for(int j=i+1;j<nums.size();++j){
                if(nums[j]+nums[i]>=0&&nums[i]+nums[j]>target) break; 
                left=j+1;
                right=nums.size()-1;

                if(j>i+1&&nums[j]==nums[j-1]) continue;
                if(nums[right]<target/4) break; 
                while(left<right){
                    double result = (double)nums[i]+nums[j]+nums[left]+nums[right];
                    //long(nums[i]+nums[j]+nums[left]+nums[right])不行
                    //(long)nums[i]+nums[j]+nums[left]+nums[right]就可以
                    //////////强制类型转换的写法要注意
                    if(result>target) right--;
                    else if(result<target) left++;
                    else{
                        vv.push_back({nums[i],nums[j],nums[left],nums[right]});
                        while(left<right&&nums[left+1]==nums[left]) left++;
                        while(left<right&&nums[right-1]==nums[right]) right--;
                        left++;
                        right--;
                    }
                }

            }
        }
        return vv;

    }
};