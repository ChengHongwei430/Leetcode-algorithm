/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
bool TreeOperator(TreeNode* root, int sum ,int targetSum){

    if( !root->left && !root->right && sum==targetSum ) return 1;
    else if ( !root->left && !root->right && sum!=targetSum ) return 0;

    int a,b;
    if(root->left) a =TreeOperator(root->left,sum+root->left->val,targetSum);
    if(root->right) b =TreeOperator(root->right,sum+root->right->val,targetSum);
    
    if(!root->right) return a;
    else if(!root->left) return b;
    else return a||b;

}

class Solution {
public:
    bool hasPathSum(TreeNode* root, int targetSum) {
        if(root)  return TreeOperator(root,root->val,targetSum);
        else return 0;
    }
};