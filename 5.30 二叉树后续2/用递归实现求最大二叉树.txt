/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    TreeNode* constructMaximumBinaryTree(vector<int>& nums) {

        if(nums.size()==0) return NULL;
        int maxn=INT32_MIN;
        int maxi;
        for(int i=0;i<nums.size();++i){
            if(nums[i]>maxn){
                maxn=nums[i];
                maxi=i;
            }
        } 

        TreeNode* root = new TreeNode(maxn);//新建一个节点
        
        vector<int> l(nums.begin(),nums.begin()+maxi);//左子树
        vector<int> r(nums.begin()+maxi+1,nums.end());//右子树

        root->left=constructMaximumBinaryTree(l);
        root->right=constructMaximumBinaryTree(r);
        return root;
    }
};